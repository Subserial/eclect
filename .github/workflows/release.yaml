name: Release
on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        flow:
          - base: Windows
            uses-os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: zip
          - base: Linux
            uses-os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
    name: Release ${{ matrix.flow.base }}
    runs-on: ${{ matrix.flow.uses-os }}
    permissions:
      contents: write
    steps:
      - name: Set up MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: mingw-w64-x86_64-openssl
        if: ${{ contains(matrix.flow.uses-os, 'windows') }}
      - name: Install musl-tools
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: ${{ contains(matrix.flow.uses-os, 'ubuntu') }}
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: |
          rustup target add ${{ matrix.flow.target }}
          cargo build --locked --release --verbose --target=${{ matrix.flow.target }}
      - name: Run tests
        run: cargo test --locked --release --verbose --target=${{ matrix.flow.target }}
      - name: Compress artifacts (Windows)
        if: ${{ contains(matrix.flow.uses-os, 'windows') }}
        run: |
          copy target\\${{ matrix.flow.target }}\\release\\eclect.exe eclect.exe
          7z a eclect_${{ matrix.flow.target }}.zip eclect.exe README.md LICENSE-MIT-CMU
      - name: Compress artifacts (Linux)
        if: ${{ contains(matrix.flow.uses-os, 'ubuntu') }}
        run: |
          cp target/${{ matrix.flow.target }}/release/eclect eclect
          tar -czf eclect_${{ matrix.flow.target }}.tar.gz eclect README.md LICENSE-MIT-CMU
      - name: Upload ${{ matrix.flow.base }} Artifact
        run: gh release upload --clobber ${{ github.ref_name }} eclect_${{ matrix.flow.target }}.${{ matrix.flow.ext }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}